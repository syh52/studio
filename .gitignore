# ===== 必须忽略的文件（安全和性能考虑）=====

# 依赖目录（体积巨大，应通过 package.json 安装）
node_modules/
jspm_packages/

# 环境变量（包含敏感信息如API密钥）
.env
.env.local
.env.production
# 开发测试阶段：创建 .env.example 来共享配置模板
# .env.development.local  # 如果团队需要共享开发配置可以注释掉
# .env.test.local        # 如果需要共享测试配置可以注释掉

# Firebase 临时文件和缓存
.firebase/
firebase-debug.log*
ui-debug.log*
firestore-debug.log*

# Next.js 构建输出
.next/
out/
build/
dist/
/build

# TypeScript
*.tsbuildinfo
next-env.d.ts

# ===== 开发测试阶段可选忽略 =====

# 日志文件（开发时可能需要查看）
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
# 如果需要提交特定日志用于调试，使用: git add -f debug.log

# 测试相关文件
coverage/
.coverage/
*.lcov
.nyc_output/
htmlcov/
test-results/

# 编辑器配置（团队可能需要共享配置）
.vscode/       # 如果团队使用统一的VSCode配置，可以注释掉
.idea/
*.swp
*.swo
*~
*.sublime-*

# 系统文件
.DS_Store
.DS_Store?
._*
Thumbs.db
ehthumbs.db
[Dd]esktop.ini
$RECYCLE.BIN/
.Spotlight-V100
.Trashes

# 临时文件和缓存
tmp/
temp/
*.tmp
*.temp
.cache/
.parcel-cache/
.npm/

# 运行时数据
pids/
*.pid
*.seed
*.pid.lock

# 包管理器文件
# 开发阶段建议提交 package-lock.json 确保依赖版本一致
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# 可选的npm缓存目录
.npm

# 可选的REPL历史
.node_repl_history

# npm pack 的输出
*.tgz

# Yarn完整性文件
.yarn-integrity

# dotenv测试环境变量文件
.env.test

# Nuxt.js 构建/生成输出
.nuxt

# Storybook构建输出
.out
.storybook-out

# 备份文件
*.backup
*.bak
*.orig

# 压缩文件
*.zip
*.tar.gz
*.rar

# ===== 项目特定忽略 =====

# Vercel部署
.vercel

# Sentry
.sentryclirc

# 本地开发数据库
*.sqlite
*.db

# 调试文件
debug.log

# ===== 提示 =====
# 1. 强制添加被忽略的文件：git add -f <filename>
# 2. 查看被忽略的文件：git status --ignored
# 3. 测试忽略规则：git check-ignore -v <filename>
